@model IPagedList<Ccs.Models.ContestListModel>
@{
    ViewData["Title"] = "Home Page";
    ViewData["UseCardTheme"] = true;
    (Dictionary<string, (double, double, double)>, List<Polygon.Entities.Judgehost>, DateTimeOffset) health = ViewBag.Health;
}

@functions {
    static string ContestState(Ccs.Models.ContestListModel c)
    {
        if (!c.StartTime.HasValue) return "primary";
        if (DateTimeOffset.Now < c.StartTime) return "warning";
        if (DateTimeOffset.Now < c.StartTime + c.Duration) return "success";
        return "secondary";
    }

    static string ContestState2(Ccs.Models.ContestListModel c)
    {
        if (c.Kind == Ccs.CcsDefaults.KindProblemset) return "open";
        if (!c.StartTime.HasValue) return "scheduling";
        if (DateTimeOffset.Now < c.StartTime) return "pending";
        if (DateTimeOffset.Now < c.StartTime + c.Duration) return "running";
        return "finished";
    }

    static string ContestKind(Ccs.Models.ContestListModel c)
    {
        return c.Kind switch
        {
            0 => "Contest",
            1 => "Practice",
            2 => "Problemset",
            _ => "Unknown",
        };
    }

    static string ContestRule(Ccs.Models.ContestListModel c)
    {
        return c.RankingStrategy switch
        {
            0 => "ACM-ICPC",
            1 => "IOI",
            2 => "Codeforces",
            _ => "Unknown",
        };
    }
}

<style>
.health-item {
  margin-top: 5px;
  margin-bottom: 5px;
}

.health-title,
.health-item-span {
  padding-left: 5px;
}

#about-links a {
  color: inherit;
  padding: 5px;
  border-radius: 5px;
}

#about-links a:hover {
  text-decoration: none;
  color: rgba(0,90,158,1);
  background-color: rgba(0,0,0,.06);
}
</style>

<div class="row">
<div class="container card-container">

<div class="card window-card container-fluid">
<div class="card-body">
<h2>Contests</h2>
<div class="card-table">
<table class="table table-hover">
<thead>
    <tr role="row">
        <th scope="col" style="min-width:17em">name</th>
        <th scope="col" style="min-width:13em">time</th>
        <th scope="col" style="min-width:10em" class="d-none d-md-table-cell">details</th>
    </tr>
</thead>
<tbody>
@foreach (var cts in Model)
{
    <tr data-toggle="gotoUrlV2" data-href="@Url.Action("Home", "DomPublic", new { area = "Contest", cid = cts.ContestId })">
        <td>
            <i class="fas fa-info-circle text-@ContestState(cts)" title="@ContestState2(cts)"></i> @ContestKind(cts) @cts.ShortName
            <br />
            @(string.IsNullOrEmpty(cts.Name) ? "(unnamed)" : cts.Name)
        </td>
        <td>
            <span title="start time"><i class="far fa-calendar-alt fa-fw"></i> @(cts.StartTime.HasValue ? Html.CstTime(cts.StartTime) : "N/A")</span>
            <br />
            <span title="duration"><i class="far fa-clock fa-fw"></i> +@(cts.Duration?.ToString() ?? "N/A")</span>
        </td>
        <td class="d-none d-md-table-cell">
            <span title="# teams" class="mr-2"><i class="far fa-user fa-fw"></i> @cts.TeamCount</span>
            <span title="# problems"><i class="far fa-file-pdf fa-fw"></i> @cts.ProblemCount</span>
            <br />
            <span title="rule"><i class="far fa-futbol fa-fw"></i> @ContestRule(cts)</span>
        </td>
    </tr>
}
@if (Model.Count == 0)
{ 
    <tr>
        <td colspan="3" class="text-md-center">
            No data available in table
        </td>
    </tr>
}
</tbody>
</table>
</div>
</div>
</div>
    
<div class="card window-card container-fluid">
<div class="card-body">
<h2>Service health</h2>

<div class="row">
    <div class="col-12 col-md-4 mb-3">
        <p class="mb-0 health-title"><b style="line-height:2">Version</b></p>
        <p class="mb-0 health-item health-item-span" title="instance role"><i class="fas fa-hdd fa-fw"></i> On-Premise</p>
        <p class="mb-0 health-item health-item-span" title="version"><i class="fas fa-code-branch fa-fw"></i> <span class="filename">@(Controllers.HomeController.ProgramVersion)</span></p>
        <p class="mb-0 health-item health-item-span" title="runtime"><i class="fas fa-dna fa-fw"></i> .NET Core 3.1</p>
    </div>
    <div class="col-12 col-md-4 mb-3">
        <p class="mb-0 health-title"><b style="line-height:2">Load</b></p>
@foreach (var judgehost in health.Item2)
{
    if (!judgehost.Active) continue;
    var lastCheckAgo = health.Item3 - judgehost.PollTime;
    var (statStr, statIcon) = !lastCheckAgo.HasValue
        ? ("secondary", "info") : lastCheckAgo.Value.TotalSeconds < 30
        ? ("success", "check") : lastCheckAgo.Value.TotalSeconds < 120
        ? ("warning", "exclamation")
        : ("danger", "times");
    var load = health.Item1.GetValueOrDefault(judgehost.ServerName);
        <p class="mb-0 health-item health-item-span" title="@judgehost.ServerName"><i class="text-@statStr fas fa-@statIcon-circle"></i> @($"{load.Item1:F2}, {load.Item2:F2}, {load.Item3:F2}")</p>
}
    </div>
    <div class="col-12 col-md-4 mb-3" id="about-links">
        <p class="mb-0 health-title"><b style="line-height:2">Links</b></p>
        <p class="mb-0 health-item"><a href="https://acm.xylab.fun" rel="me"><i class="fas fa-globe-asia fa-fw"></i> Platform</a></p>
        <p class="mb-0 health-item"><a href="https://github.com/namofun" rel="nofollow"><i class="fab fa-github fa-fw"></i> Open Source</a></p>
        <p class="mb-0 health-item"><a href="https://www.xylab.fun" rel="nofollow"><i class="fas fa-flask fa-fw"></i> Laboratory</a></p>
    </div>
</div>
</div>
</div>

</div>
</div>
